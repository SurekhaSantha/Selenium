public static int logic(String file, String SheetName, String column)
			throws Throwable {
		int index = 0;
		try {
			FileInputStream fs = new FileInputStream(file);
			XSSFCell cell =null;
			@SuppressWarnings("resource")
			XSSFWorkbook Wb = new XSSFWorkbook(fs);
			XSSFSheet Sh = Wb.getSheet(SheetName);
			try {
			for (int i = 0; i <= Sh.getLastRowNum(); i++) {
				XSSFRow row = Sh.getRow(i);
				
			    cell = row.getCell(5);
					DataFormatter df = new DataFormatter();
						String formattedValue = df.formatCellValue(cell);
						String dbValue= dbconnect(formattedValue);
					if(Integer.parseInt(dbValue) == 0) {
						writeCel(file,SheetName,i,6,dbValue);
						writeCel(file,SheetName,i,7,"PASS");
					} else {
						writeCel(file,SheetName,i,6,dbValue);
						writeCel(file,SheetName,i,7,"FAIL");
					}
				}
			} catch (NullPointerException e) {
			}
			fs.close();
			Thread.sleep(10);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return index;
	}
	
	public static String dbconnect(String query) throws Throwable {
		System.out.println("am now in db function");
		String resultValue=null;
		System.out.println("Query : " + query);
		String dburl;
		String dbuser="user";
		String DB_Pwd="password";
		Class.forName("oracle.jdbc.driver.OracleDriver");
		dburl = "jdbc:oracle:thin:@ <db_Host>:<DB_Port>/<db_Instance>" ;
		System.out.println("*******************************************************************");
		System.out.println("DB Connection String:" + dburl);
		Connection connection;
		try {
			connection = DriverManager.getConnection(dburl, dbuser,DB_Pwd);
			PreparedStatement statement = connection.prepareStatement(query);
			ResultSet rs = statement.executeQuery();
			connection.commit();
				if (rs != null) {
					while (rs.next()) {
						resultValue=rs.getString(0);
					}
				System.out.println("Query Successfully Updated");
			}
			connection.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return resultValue;
	}
		public static void writeCel(String file, String SheetName, int RowNum, int ColumnIndex,
			String value) throws Throwable {
		try {
			System.out.println("RowNum:" + RowNum + "\nColumnIndex:" + ColumnIndex);
			File filestr = new File(file);
			FileInputStream inputStream = new FileInputStream(filestr);
			XSSFWorkbook Wb = null;
			Wb = new XSSFWorkbook(inputStream);
			XSSFSheet sheet = Wb.getSheet(SheetName);
			XSSFRow newRow = null;
			XSSFCell cell = null;
			try {
				newRow = sheet.getRow(RowNum);
			} catch (NullPointerException e) {
				newRow = sheet.createRow(RowNum);
				cell = newRow.createCell(ColumnIndex);
			}
			try {
				cell = newRow.getCell(ColumnIndex);
			} catch (NullPointerException e) {
				newRow = sheet.createRow(RowNum);
				cell = newRow.createCell(ColumnIndex);
			}
			newRow.createCell(ColumnIndex).setCellValue(value);
			inputStream.close();
			Thread.sleep(100);
			FileOutputStream outputStream;
			try {
				outputStream = new FileOutputStream(filestr);
			} catch (IOException e) {
				Thread.sleep(1000);
				System.out.println("waiting");
				outputStream = new FileOutputStream(filestr);
			}
			Wb.write(outputStream);
			outputStream.close();
			Thread.sleep(100);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}